#!/bin/sh
#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
#
#   LICENSE:
#
#   Permission is hereby granted, free of charge, to any person obtaining a
#   copy of this software and associated documentation files (the "Software"),
#   to deal in the Software without restriction, including without limitation
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
#   and/or sell copies of the Software, and to permit persons to whom the
#   Software is furnished to do so, subject to the following conditions:
#
#   The above copyright notice and this permission notice shall be included
#   in all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#   OTHER DEALINGS IN THE SOFTWARE.

exit_success()
{
	if [ $# -gt 0 ]; then
		echo "$@"
		echo
	fi

	exit 0
}

exit_failure_syntax()
{
	exit 1
}

exit_failure_operation_impossible()
{
	exit 3
}

exit_failure_operation_failed()
{
	exit 4
}

check_common_commands()
{
}

check_common_commands "$@"

[ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && unset XDG_UTILS_DEBUG_LEVEL;
if [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt 1 ]; then
	xdg_redirect_output=" > /dev/null 2> /dev/null"
else
	xdg_redirect_output=" >&2"
fi

detectDE()
{
	if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
	elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
	elif xprop -root _DT_SAVE_MODE | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
	fi
}

kfmclient_fix_exit_code()
{
	version=`kde-config --version 2>/dev/null | grep KDE`
	major=`echo $version | sed 's/KDE: \([0-9]\).*/\1/'`
	minor=`echo $version | sed 's/KDE: [0-9]*\.\([0-9]\).*/\1/'`
	release=`echo $version | sed 's/KDE: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
	test "$major" -gt 3 && return $1
	test "$minor" -gt 5 && return $1
	test "$release" -gt 4 && return $1
	return 0
}

open_kde()
{
	kfmclient exec "$1"
	kfmclient_fix_exit_code $?

	if [ $? -eq 0 ]; then
		exit_success
	else
		exit_failure_operation_failed
	fi
}

open_gnome()
{
	gnome-open "$1"

	if [ $? -eq 0 ]; then
		exit_success
	else
		exit_failure_operation_failed
	fi
}

open_xfce()
{
	exo-open "$1"

	if [ $? -eq 0 ]; then
		exit_success
	else
		exit_failure_operation_failed
	fi
}

open_generic()
{
	IFS=":"
	for browser in $BROWSER; do
		if [ x"$browser" != x"" ]; then

			browser_with_arg=`echo "$browser" | sed s#%s#"$1"#`

			if [ x"$browser_with_arg" = x"$browser" ]; then "$browser" "$1";
			else $browser_with_arg;
			fi

			if [ $? -eq 0 ]; then exit_success;
			fi
		fi
	done

	exit_failure_operation_impossible
}

[ x"$1" != x"" ] || exit_failure_syntax

url=
while [ $# -gt 0 ] ; do
	parm="$1"
	shift

	case "$parm" in
	  -*)
		exit_failure_syntax
		;;

	  *)
		if [ -n "$url" ] ; then
			exit_failure_syntax
		fi
		url="$parm"
		;;
	esac
done

if [ -z "${url}" ] ; then
	exit_failure_syntax
fi

detectDE

if [ x"$DE" = x"" ]; then
	# if BROWSER variable is not set, check some well known browsers instead
	if [ x"$BROWSER" = x"" ]; then
		BROWSER=firefox:mozilla:netscape
	fi
	DE=generic
fi

case "$DE" in
	kde)
	open_kde "$url"
	;;

	gnome)
	open_gnome "$url"
	;;

	xfce)
	open_xfce "$url"
	;;

	generic)
	open_generic "$url"
	;;

	*)
	exit_failure_operation_impossible
	;;
esac
